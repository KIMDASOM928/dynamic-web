Homework Questions Part 2:




1.	What IS form validation?

form validation is when you fill out a form on a website and and are provided with feedback regarding the data that you have entered in the various form inputs.



2.	What are the two types of client-side form validation?

Built-in form validation and html5 forms



3.	What exactly is html5 built-in form validation? Describe the one attribute that needs to be added to the form input element in order for built in form validation to work at a minimum? 

form validation is when you fill out a form on a website and and are provided with feedback regarding the data that you have entered in the various form inputs. If the data the user has provided is valid, the application allows the data to be submitted to the server and saved to a database.

The required attribute is the minimum requirement for HTML5 form control to work. When you add the required attribute to your input element, it forces the user to input data into that field before he/she can submit the form.



4.	Use the different input elements (username, password, email) we have talked about and demonstrated in class as examples of how to implement html5 built-in form validation. You can and SHOULD take from the form which you have to build for your next project as examples. That’s the idea here. A number of you used code from the Arithmetic Forms to provide examples in answers to the questions for the week 3 homework. That was really excellent! I would like to see the same happen here.

<input type="username" name="username" placeholder="enter username" pattern="^(?=.*\d)(?=.*[a-zA-Z]).{8,15}$" required>        
<input type="email" name="mail" placeholder="enter email" pattern="(\b[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}\b)" required>
<input type="password" name="password" placeholder="enter password" pattern="^(?=.*\d)(?=.*[A-Z])\w{8,15}$" required>



5.	What is the main difference between HTML5 form validation and the JavaScript Constraint Validation API?

If you want to have complete control over the customization of your form validation, i.e., styling and messaging, you have to use JavaScript.



6.	What is the input attribute you would NOT want to use when creating a form with the JavaScript Constraint Validation API?

when you use the Constraint Validation API, you should NOT use the title attribute. That's because the title attribute would override any messages set up via JavaScript using the .setCustomValidity() method.


7.	Is client-side form validation enough by itself? Why not?

client-side validation should not be considered an exhaustive security measure! Your apps should always perform security checks on any form-submitted data on the server-side as well as the client-side, because client-side validation is too easy to turn off, so malicious users can still easily send bad data through to your server.




8.	Why would we want to use form validation when at the same time we want them to have the best UX possible on our site? Give three reasons why we would want to use form validation on our users.

We want to get all their data in the right format. If the data is not correctly formatted, it is of no use to us!
We want to protect all our users' data. We want to force our users to input secure passwords, thereby protecting the information they have shared with us.
Lastly, we want to protect ourselves from malicious hackers.




9.	What is one of the most significant features of HTML5 form controls? How is this achieved?

One of the most significant features of HTML5 form controls is the ability to validate most user data without relying on JavaScript. This is done by using validation attributes on form elements.



10.	List seven attributes used in built-in form validation, and describe what they do.
required: Specifies whether a form field needs to be filled in before the form can be submitted.

minlength: Specifies the minimum length of textual data (strings)
maxlength: Specifies the maximum length of textual data (strings)
min: Specifies the minimum values of numerical input types
max: Specifies the maximum values of numerical input types
type: Specifies whether the data needs to be a number, an email address, or some other specific preset type. 
pattern: Specifies a regular expression that defines a pattern the entered data needs to follow.


